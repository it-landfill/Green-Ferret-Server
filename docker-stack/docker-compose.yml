version: '3.8'
name: green-ferret
services:
    mqttserver:
        image: "eclipse-mosquitto:2.0.15"
        container_name: mqttserver
        restart: unless-stopped
        ports:
            - "1883:1883"
        networks:
            - iot_net
        volumes:
            - mosquitto_data:/mosquitto/data
            - mosquitto_log:/mosquitto/log
            - mosquitto_config:/mosquitto/config
        environment:
            - TZ=Europe/Rome
        healthcheck:
            test: "mosquitto_pub -h localhost -t ping -n --quiet || [ $? -eq 5 ]"
            interval: 60m
            timeout: 10s
            retries: 6
        command:
            - /bin/sh
            - -c
            - |
                echo -e "$MQTT_CONFIG" > /mosquitto/config/mosquitto.conf
                [ -f /mosquitto/config/credentials.txt ] || echo -e "$MQTT_CREDENTIALS" > /mosquitto/config/credentials.txt
                /usr/sbin/mosquitto -c "/mosquitto/config/mosquitto.conf"
    influxdb:
        image: "influxdb:2.7.1"
        container_name: influxdb
        restart: unless-stopped
        ports:
            - "8086:8086"
        networks:
            - iot_net
        volumes:
            - influxdb_data:/var/lib/influxdb2
            - influxdb_config:/etc/influxdb2
            - influxdb_backup:/var/lib/backup
        environment:
            - TZ=Europe/Rome
            - DOCKER_INFLUXDB_INIT_MODE=setup
            - DOCKER_INFLUXDB_INIT_USERNAME=$INFLUXDB_USERNAME
            - DOCKER_INFLUXDB_INIT_PASSWORD=$INFLUXDB_PASSWORD
            - DOCKER_INFLUXDB_INIT_ORG=$INFLUXDB_ORG
            - DOCKER_INFLUXDB_INIT_BUCKET=$INFLUXDB_BUCKET
        healthcheck:
            test: ["CMD", "influx", "ping"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
    grafana:
        image: "grafana/grafana-oss:9.5.2"
        container_name: grafana
        restart: unless-stopped
        ports:
            - "3000:3000"
        depends_on:
            - influxdb
        networks:
            - iot_net
        volumes:
            - grafana_data:/var/lib/grafana
        healthcheck:
            test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
    mqtt-agent:
        image: "aleben/green-ferret_mqtt-agent:1.1"
        depends_on:
            - mqttserver
            - influxdb
            - postgres-db
        container_name: mqtt-agent
        restart: unless-stopped
        networks:
            - iot_net
        environment:
            - MQTT_HOST=$MQTT_AGENT_HOST
            - MQTT_PORT=$MQTT_AGENT_PORT
            - MQTT_USERNAME=$MQTT_AGENT_USERNAME
            - MQTT_PASSWORD=$MQTT_AGENT_PASSWORD
            - MQTT_CLIENT_ID=$MQTT_AGENT_CLIENT_ID
            - INFLUXDB_HOST=$INFLUXDB_HOST
            - INFLUXDB_PORT=$INFLUXDB_PORT
            - INFLUXDB_ORG=$INFLUXDB_ORG
            - INFLUXDB_BUCKET=$INFLUXDB_BUCKET
            - INFLUXDB_TOKEN=$MQTT_AGENT_INFLUXDB_TOKEN
            - POSTGRES_HOST=$POSTGRES_HOST
            - POSTGRES_DB=$POSTGRES_DB
            - POSTGRES_USER=$POSTGRES_USER
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    http-agent:
        image: "aleben/green-ferret_http-agent:1.0"
        depends_on:
            - influxdb
        container_name: http-agent
        restart: unless-stopped
        networks:
            - iot_net
        ports:
            - "5000:5000"
        environment:
            - HTTP_PORT=$HTTP_AGENT_PORT
            - INFLUXDB_HOST=$INFLUXDB_HOST
            - INFLUXDB_PORT=$INFLUXDB_PORT
            - INFLUXDB_ORG=$INFLUXDB_ORG
            - INFLUXDB_BUCKET=$INFLUXDB_BUCKET
            - INFLUXDB_TOKEN=$HTTP_AGENT_INFLUXDB_TOKEN
        healthcheck:
            test: ["CMD", "wget", "--spider", "http://localhost:5000"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
    coap-agent:
        image: "aleben/green-ferret_coap-agent:1.0"
        depends_on:
            - influxdb
        container_name: coap-agent
        restart: unless-stopped
        networks:
            - iot_net
        ports:
            - "5683:5683/udp"
        environment:
            - COAP_PORT=$COAP_AGENT_PORT
            - INFLUXDB_HOST=$INFLUXDB_HOST
            - INFLUXDB_PORT=$INFLUXDB_PORT
            - INFLUXDB_ORG=$INFLUXDB_ORG
            - INFLUXDB_BUCKET=$INFLUXDB_BUCKET
            - INFLUXDB_TOKEN=$COAP_AGENT_INFLUXDB_TOKEN
    telegram-bot:
      image: "aleben/green-ferret_telegram_bot:1.0"
      depends_on:
          - mqttserver
      container_name: telegram-bot
      restart: unless-stopped
      networks:
          - iot_net
      environment:
            - MQTT_HOST=$MQTT_AGENT_HOST
            - MQTT_PORT=$MQTT_AGENT_PORT
            - MQTT_USERNAME=$MQTT_AGENT_USERNAME
            - MQTT_PASSWORD=$MQTT_AGENT_PASSWORD
            - MQTT_CLIENT_ID=$TELEGRAM_MQTT_CLIENT_ID
            - TELEGRAM_API_TOKEN=$TELEGRAM_API_TOKEN
            - TELEGRAM_MASTER_CHAT_ID=$TELEGRAM_MASTER_CHAT_ID
    postgres-db:
      image: postgres
      container_name: postgres
      restart: unless-stopped
      networks:
        - iot_net
      environment:
        - POSTGRES_DB=$POSTGRES_DB
        - POSTGRES_USER=$POSTGRES_USER
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      volumes:
        - postgres_data:/var/lib/postgresql/data
      ports:
        - 5432:5432
    pg-adminer:
      image: adminer
      restart: unless-stopped
      depends_on:
        - postgres-db
      networks:
        - iot_net
      ports:
        - 4321:8080
    gf-admin:
      image: aleben/green-ferret_admin:1.0
      restart: unless-stopped
      depends_on:
        - postgres-db
      networks:
        - iot_net
      ports:
        - 4322:3000
      environment:
        - POSTGRES_DB=$POSTGRES_DB
        - POSTGRES_USER=$POSTGRES_USER
        - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        - POSTGRES_HOST=postgres
      healthcheck:
          test: ["CMD", "wget", "--spider", "http://localhost:3000"]
          interval: 30s
          timeout: 10s
          retries: 3
          start_period: 30s

volumes:
    mosquitto_data:
    mosquitto_log:
    mosquitto_config:
    influxdb_data:
    influxdb_config:
    influxdb_backup:
    grafana_data:
    postgres_data:

networks:
    iot_net:
